<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IPS.Library40.WinForm.Controls</name>
    </assembly>
    <members>
        <member name="M:IPS.Library.WinForm.Controls.CommonWinFormControlRoutinen.IsLeaveControlForward(System.Windows.Forms.ContainerControl,System.Windows.Forms.Control)">
            <summary>
            Kontrolliert anhand des TabIndex, ob das übergebene Control vorwärts verlassen wurde.
            </summary>
            <param name="containerControl">Das Formular, dass das zu prüfende Control enthält.</param>
            <param name="checkControl">Das zu prüfende Control</param>
            <returns></returns>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.CheckBoxIPS.CheckBoxIPS.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the control is read-only.
            </summary>
            <value>
            <b>true</b> if the combo box is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            When this property is set to <b>true</b>, the contents of the control cannot be changed 
            by the user at runtime. With this property set to <b>true</b>, you can still set the value
            in code. You can use this feature instead of disabling the control with the Enabled
            property to allow the contents to be copied.
            </remarks>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.CheckBoxIPS.CheckBoxIPS.OnReadOnlyChanged(System.Object,System.EventArgs)">
            <summary>
            Shows either the ComboBox or the TextBox or nothing, depending on the state
            of the ReadOnly, Enable and Visible flags.
            </summary>
        </member>
        <member name="T:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxMultiSelectIPS._DropDown">
            <summary>
            Internal class to represent the dropdown list of the CheckedComboBox
            </summary>
        </member>
        <member name="T:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxMultiSelectIPS._DropDown.ComboBoxMultiSelectEventArgs">
            <summary>
            Custom EventArgs encapsulating value as to whether the combo box value(s) should be assignd to or not.
            </summary>
        </member>
        <member name="T:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxMultiSelectIPS._DropDown.CustomCheckedListBox">
            <summary>
            A custom CheckedListBox being shown within the dropdown form representing the dropdown list of the CheckedComboBox.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxMultiSelectIPS._DropDown.CustomCheckedListBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Intercepts the keyboard input, [Enter] confirms a selection and [Esc] cancels it.
            </summary>
            <param name="e">The Key event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxMultiSelectIPS._DropDown.CloseDropdown(System.Boolean)">
            <summary>
            Closes the dropdown portion and accept any changes according to the specified boolean parameter.
            NOTE: even though the caller might ask for changes to be accept, this doesn't necessarily mean
                  that any changes have occurred as such. Caller should check the ValueChanged property of the
                  CheckedComboBox (after the dropdown has closed) to determine any actual value changes.
            </summary>
            <param name="acceptChanges"></param>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxMultiSelectIPS.ItemCheck">
            <summary>
            Event handler for when an item check state changes.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxMultiSelectIPS.ValueSeparator">
            <summary>
            The valueSeparator character between the ticked elements as they appear in the 
            text portion of the CheckedComboBox.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxMultiSelectIPS.CheckedItemsCount">
            <summary>
            Anzahl der markierten Einträge.
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxMultiSelectIPS._components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxMultiSelectIPS.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS">
            <summary>
            Represents a Windows combo box control. It enhances the .NET standard combo box control
            with a ReadOnly mode.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the control is read-only.
            </summary>
            <value>
            <b>true</b> if the combo box is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            When this property is set to <b>true</b>, the contents of the control cannot be changed 
            by the user at runtime. With this property set to <b>true</b>, you can still set the value
            in code. You can use this feature instead of disabling the control with the Enabled
            property to allow the contents to be copied.
            </remarks>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.Visible">
            <summary>
            Gets or sets a value indicating wether the control is displayed.
            </summary>
            <value><b>true</b> if the control is displayed; otherwise, <b>false</b>. 
            The default is <b>true</b>.</value>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.IsLocked">
            <summary>
            "Wenn True, können die Eigenschaften des Controls nur direkt geändert werden und nicht innerhalb von Schleifen."
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.IsNewItem">
            <summary>
            Liefert TRUE zurück, wenn es keine DropDownList ist und der akt. Eintrag in der Auflistung nicht enthalten ist.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.Hide">
            <summary>
            Conceals the control from the user.
            </summary>
            <remarks>
            Hiding the control is equvalent to setting the <see cref="P:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.Visible"/> property to <b>false</b>. 
            After the <b>Hide</b> method is called, the <b>Visible</b> property returns a value of 
            <b>false</b> until the <see cref="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.Show"/> method is called.
            </remarks>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.Show">
            <summary>
            Displays the control to the user.
            </summary>
            <remarks>
            Showing the control is equivalent to setting the <see cref="P:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.Visible"/> property to <b>true</b>.
            After the <b>Show</b> method is called, the <b>Visible</b> property returns a value of 
            <b>true</b> until the <see cref="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.Hide"/> method is called.
            </remarks>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.AddTrennLinie(System.Char)">
            <summary>
            Fügt der aktuellen Itemsauflistung eine Trennline hinzu.
            </summary>
            <param name="zeichen">Das Zeichen, aus dem die Trennline erstellt wird.</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnParentChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)"/>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnSelectedIndexChanged(System.EventArgs)"/>.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnDropDownStyleChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnDropDownStyleChanged(System.EventArgs)"/>.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnFontChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnFontChanged(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnResize(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnResize(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnDockChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnEnabledChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnTextChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnLocationChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.OnTabIndexChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ComboBoxIPS.ComboBoxIPS.showControl">
            <summary>
            Shows either the ComboBox or the TextBox or nothing, depending on the state
            of the ReadOnly, Enable and Visible flags.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.DataGridViewIPS.DataGridViewIPS.SetColumnStyle">
            <summary>
            Legt fest, ob nach einer Änderung der DataSource-Property autom. ColumnStyles für die Spalten des neuen DataSource-Object erzeugt werden sollen, oder nicht
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.DataGridViewIPS.DataGridViewIPS.SetColumnSize">
            <summary>
            Legt fest, ob die Spaltenbreiten autom. (=TRUE) an den Inhalt angepasst werden, oder ob diese Aktion explizit angestossen werden muss (=FALSE)
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.DataGridViewIPS.DataGridViewIPS.AllowSorting">
            <summary>
            Über diese Egenschaft wird festgelegt, ob ein Sortieren von Spalten generell erlaubt, oder verboten ist.
            Wenn eine Sortierung erlaubt, muss dann bei der einzelnen Spalte über 'SortMode' der jeweilige Sortiermodus festgelegt werden.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.DataGridViewIPS.DataGridViewIPS.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
            <summary>
            Zeichnet die ZeilenNr in den ZeilenHeader.
            <para>
            Die Spaltenbreite wird automatisch angepasst
            </para>
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.DataGridViewIPS.DataGridViewIPS.editingControlShowing(System.Object,System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
            <summary>
            Behandlung für das EditingControlShowing-Ereignis von DataGridView
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.DataGridViewIPS.PanelQuickSearch.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.DataGridViewIPS.PanelQuickSearch.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.DataGridViewIPS.PanelQuickSearch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ImagePanel.ImagePanelData.Update(IPS.Library.WinForm.Contracts.IImagePanel)">
            <summary>
            Aktualisiert die lokalen Daten und setzt die Changed-Property auf false.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ImagePanel.ImagePanelData.Refresh(IPS.Library.WinForm.Contracts.IImagePanel)">
            <summary>
            Aktualisiert die lokalen Daten. Lässt die Changed-Property aber unverändert.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ImagePanel.ImagePanelRoutinen.GetCommonImageParameter(System.Drawing.Image,System.String)">
            <summary>
            Erstellt eine Zeichenkette mit folgendem Inhalt: Größe: 0 x 0 Pixel(SplittItem)Auflösung: 0 DPI
            </summary>
            <param name="image"></param>
            <param name="splittItem">Die Zeichenkette, die die Werte für Größe und Auflösung trennt.</param>
            <returns></returns>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.ImagePanel.ImagePanel`1.components">
            <summary> 
            Erforderliche Designervariable.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ImagePanel.ImagePanel`1.Dispose(System.Boolean)">
            <summary> 
            Verwendete Ressourcen bereinigen.
            </summary>
            <param name="disposing">True, wenn verwaltete Ressourcen gelöscht werden sollen; andernfalls False.</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ImagePanel.ImagePanel`1.InitializeComponent">
            <summary> 
            Erforderliche Methode für die Designerunterstützung. 
            Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.Kennzeichen.KennzeichenIPS.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the control is read-only.
            </summary>
            <value>
            <b>true</b> if the combo box is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            When this property is set to <b>true</b>, the contents of the control cannot be changed 
            by the user at runtime. With this property set to <b>true</b>, you can still set the value
            in code. You can use this feature instead of disabling the control with the Enabled
            property to allow the contents to be copied.
            </remarks>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.Kennzeichen.KennzeichenIPS.components">
            <summary> 
            Erforderliche Designervariable.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.Kennzeichen.KennzeichenIPS.Dispose(System.Boolean)">
            <summary> 
            Verwendete Ressourcen bereinigen.
            </summary>
            <param name="disposing">True, wenn verwaltete Ressourcen gelöscht werden sollen; andernfalls False.</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.Kennzeichen.KennzeichenIPS.InitializeComponent">
            <summary> 
            Erforderliche Methode für die Designerunterstützung. 
            Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
            </summary>
        </member>
        <member name="T:IPS.Library.WinForm.Controls.NiceLine.NiceLine">
            <summary>
            "NiceLine" draws a shaded line separator. Can have an aligned text caption.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.NiceLine.NiceLine.Caption">
            <summary>
            The caption text displayed on the line. 
            If the caption is "" (the default) the line is not broken
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.NiceLine.NiceLine.CaptionMarginSpace">
            <summary>
            The distance in pixels form the control margin to caption text
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.NiceLine.NiceLine.CaptionPadding">
            <summary>
            The space in pixels arrownd text caption
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.NiceLine.NiceLine.LineAlign">
            <summary>
            The vertical alignement of the line within the space of the control
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.NiceLine.NiceLine.LineDirection">
            <summary>
            The vertical alignement of the line within the space of the control
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.NiceLine.NiceLine.CaptionOrizontalAlign">
            <summary>
            Tell where the text caption is aligned in the control
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.NiceLine.NiceLine.components">
            <summary> 
            Erforderliche Designervariable.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.NiceLine.NiceLine.Dispose(System.Boolean)">
            <summary> 
            Verwendete Ressourcen bereinigen.
            </summary>
            <param name="disposing">True, wenn verwaltete Ressourcen gelöscht werden sollen; andernfalls False.</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.NiceLine.NiceLine.InitializeComponent">
            <summary> 
            Erforderliche Methode für die Designerunterstützung. 
            Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.RadioButtonIPS.RadioButtonIPS.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the control is read-only.
            </summary>
            <value>
            <b>true</b> if the combo box is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            When this property is set to <b>true</b>, the contents of the control cannot be changed 
            by the user at runtime. With this property set to <b>true</b>, you can still set the value
            in code. You can use this feature instead of disabling the control with the Enabled
            property to allow the contents to be copied.
            </remarks>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.RichTextBoxIPS.RichTextBoxIPS.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.TextBoxIPS.TextBoxIPS.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.TextBoxIPS.TextBoxIPS.Visible">
            <summary>
            Gets or sets a value indicating wether the control is displayed.
            </summary>
            <value><b>true</b> if the control is displayed; otherwise, <b>false</b>. 
            The default is <b>true</b>.</value>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.TextBoxIPS.TextBoxIPS.IsNewItem">
            <summary>
            Liefert TRUE zurück, wenn der akt. Eintrag in der AutoCompleteCustomSource-Auflistung nicht enthalten ist.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.TextBoxIPS.TextBoxIPS.showControl">
            <summary>
            Shows either the ComboBox or the TextBox or nothing, depending on the state
            of the ReadOnly, Enable and Visible flags.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.TreeViewIPS.TreeViewIPS.SwapNodes(System.Int32,System.Int32)">
            <summary>
            Vertauscht 2 hintereinanderstehende Knoten aus einer Ebene.
            </summary>
        </member>
        <member name="T:IPS.Library.WinForm.Controls.WaterBox">
             <summary>
            Dieses Control stellt eine Art isometrisches Aquarium dar, 
            dessen Wasserspiegel man prozentual bestimmen kann. 
            Des Weiteren ist es möglich, die Farbe des Wassers und Beckens zu bestimmen.
            Eine Skala ist auch eingebettet.
             
             (c) Copyright Vincent Wochnik 2007
             </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.BorderColor">
            <summary>
            Border color
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.BorderWidth">
            <summary>
            Border width
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.LightFillColor">
            <summary>
            Light fill color
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.DarkFillColor">
            <summary>
            Dark fill color
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.LightBackColor">
            <summary>
            Light background color
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.DarkBackColor">
            <summary>
            Dark background color
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.DrawTop">
            <summary>
            Draw top
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.Separators">
            <summary>
            Separators
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.SeparatorWidth">
            <summary>
            Specifyes separator width
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.Value">
            <summary>
            The drawn value
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.MainFillColor">
            <summary>
            mix between light and dark fill colors
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WaterBox.MainBackColor">
            <summary>
            mix between light and dark background colors
            </summary>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.WaterBox.BorderColorChanged">
            <summary>
            Fired when border color changed
            </summary>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.WaterBox.BorderWidthChanged">
            <summary>
            Fired when border width changed
            </summary>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.WaterBox.LightFillColorChanged">
            <summary>
            Fired when light fill color changed
            </summary>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.WaterBox.DarkFillColorChanged">
            <summary>
            Fired when dark fill color changed
            </summary>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.WaterBox.LightBackColorChanged">
            <summary>
            Fired when light background color changed
            </summary>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.WaterBox.DarkBackColorChanged">
            <summary>
            Fired when dark background color changed
            </summary>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.WaterBox.DrawTopChanged">
            <summary>
            Fired when draw top boolean changed
            </summary>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.WaterBox.SeparatorsChanged">
            <summary>
            Fired when number of separators changed
            </summary>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.WaterBox.SeparatorWidthChanged">
            <summary>
            Fired when width of separator changed
            </summary>
        </member>
        <member name="E:IPS.Library.WinForm.Controls.WaterBox.ValueChanged">
            <summary>
            Fired when value changed
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.WaterBox.borderColor">
            <summary>
            Specifyes the border color
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.WaterBox.borderWidth">
            <summary>
            Specifyes border width
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.WaterBox.lightFillColor">
            <summary>
            Specifyes light fill color
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.WaterBox.darkFillColor">
            <summary>
            Specifyes dark fill color
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.WaterBox.lightBackColor">
            <summary>
            Specifyes light background color
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.WaterBox.darkBackColor">
            <summary>
            Specifyes dark background color
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.WaterBox.drawTop">
            <summary>
            Specifyes, wheather a top is drawn
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.WaterBox.separators">
            <summary>
            Specifyes scala separators
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.WaterBox.separatorWidth">
            <summary>
            The width of separator from 0 to 100 percent
            </summary>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.WaterBox.value">
            <summary>
            Specifyes the value
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.ResetLightFillColor">
            <summary>
            Resets light fill color
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.ShouldSerializeLightFillColor">
            <summary>
            Serialize light fill color
            </summary>
            <returns>Wheather a serialization is needed</returns>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.ResetDarkFillColor">
            <summary>
            Resets dark fill color
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.ShouldSerializeDarkFillColor">
            <summary>
            Serialize dark fill color
            </summary>
            <returns>Wheather a serialization is needed</returns>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.ResetLightBackColor">
            <summary>
            Resets light background color
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.ShouldSerializeLightBackColor">
            <summary>
            Serialize light background color
            </summary>
            <returns>Wheather a serialization is needed</returns>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.ResetDarkBackColor">
            <summary>
            Resets dark background color
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.ShouldSerializeDarkBackColor">
            <summary>
            Serialize dark background color
            </summary>
            <returns>Wheather a serialization is needed</returns>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnBorderColorChanged(System.EventArgs)">
            <summary>
            Fired when border color changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnBorderWidthChanged(System.EventArgs)">
            <summary>
            Fired when border width changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnLightFillColorChanged(System.EventArgs)">
            <summary>
            Fired when light fill color changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnDarkFillColorChanged(System.EventArgs)">
            <summary>
            Fired when dark fill color changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnLightBackColorChanged(System.EventArgs)">
            <summary>
            Fired when light background color changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnDarkBackColorChanged(System.EventArgs)">
            <summary>
            Fired when dark background color changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnDrawTopChanged(System.EventArgs)">
            <summary>
            Fired when draw top boolean changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnSeparatorsChanged(System.EventArgs)">
            <summary>
            Fired when number of separators changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnSeparatorWidthChanged(System.EventArgs)">
            <summary>
            Fired when percentual separator width changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnValueChanged(System.EventArgs)">
            <summary>
            Fired when value changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Fired on re-paint
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.WaterBox.OnSizeChanged(System.EventArgs)">
            <summary>
            Fired when size changed
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="F:IPS.Library.WinForm.Controls.ProgressBar.ProgressBarIPS.components">
            <summary> 
            Erforderliche Designervariable.
            </summary>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ProgressBar.ProgressBarIPS.Dispose(System.Boolean)">
            <summary> 
            Verwendete Ressourcen bereinigen.
            </summary>
            <param name="disposing">True, wenn verwaltete Ressourcen gelöscht werden sollen; andernfalls False.</param>
        </member>
        <member name="M:IPS.Library.WinForm.Controls.ProgressBar.ProgressBarIPS.InitializeComponent">
            <summary> 
            Erforderliche Methode für die Designerunterstützung. 
            Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
            </summary>
        </member>
        <member name="T:IPS.Library.WinForm.Controls.WinFormResources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WinFormResources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WinFormResources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:IPS.Library.WinForm.Controls.WinFormResources.InfoBlau">
            <summary>
              Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
            </summary>
        </member>
    </members>
</doc>
