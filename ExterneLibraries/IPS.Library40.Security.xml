<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IPS.Library40.Security</name>
    </assembly>
    <members>
        <member name="T:IPS.Library.Security.Impersonator">
            <summary>
            Impersonation of a user. Allows to execute code under another
            user context.
            Please note that the account that instantiates the Impersonator class
            needs to have the 'Act as part of operating system' privilege set.
            </summary>
            <remarks>	
            This class is based on the information in the Microsoft knowledge base
            article http://support.microsoft.com/default.aspx?scid=kb;en-us;Q306158
            
            Encapsulate an instance into a using-directive like e.g.:
            
            	...
            	using ( new Impersonator( "myUsername", "myDomainname", "myPassword" ) )
            	{
            		...
            		[code that executes under the new context]
            		...
            	}
            	...
            
            Please contact the author Uwe Keim (mailto:uwe.keim@zeta-software.de)
            for questions regarding this class.
            </remarks>
        </member>
        <member name="M:IPS.Library.Security.Impersonator.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor. Starts the impersonation with the given credentials.
            Please note that the account that instantiates the Impersonator class
            needs to have the 'Act as part of operating system' privilege set.
            </summary>
            <param name="userName">The name of the user to act as.</param>
            <param name="domainName">The domain name of the user to act as.</param>
            <param name="password">The password of the user to act as.</param>
        </member>
        <member name="M:IPS.Library.Security.Impersonator.impersonateValidUser(System.String,System.String,System.String)">
            <summary>
            Does the actual impersonation.
            </summary>
            <param name="userName">The name of the user to act as.</param>
            <param name="domainName">The domain name of the user to act as.</param>
            <param name="password">The password of the user to act as.</param>
        </member>
        <member name="M:IPS.Library.Security.Impersonator.undoImpersonation">
            <summary>
            Reverts the impersonation.
            </summary>
        </member>
        <member name="M:IPS.Library.Security.SecurityRoutinen.GetUserPrincipal(System.String)">
            <summary>
            Liefert den zum userNamen gehörenden UserPrincipal zurück.
            </summary>
            <param name="userName">Wenn leer, wird der aktuelle UserPrincipal zurückgegeben.</param>
            <returns></returns>
        </member>
        <member name="M:IPS.Library.Security.SecurityRoutinen.IsRuningWithAdminRights">
            <summary>
            Testet, ob die Anwendung volle Adminrechte besitzt.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
